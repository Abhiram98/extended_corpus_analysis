edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e5462:505;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e5462:354;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e5261:555;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e5219:597;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e5462:418;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e9447:453;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e9268:632;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e9268:516;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e8994:906;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e8994:790;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e11450:864;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e11710:531;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e11710:604;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e11450:791;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e12021:220;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e18692:373;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e18572:503;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e18736:329;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e18736:258;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e18692:302;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e20954:1124;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e20924:1154;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e21360:125;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e21929:125;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e21124:413;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e22829:109;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e22514:309;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e22484:339;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e22618:191;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e22554:263;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isVerbalAuxiliary(edu.stanford.nlp.trees.Tree, Set<java.lang.String>, boolean) 	e23379:114;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isVerbalAuxiliary(edu.stanford.nlp.trees.Tree, Set<java.lang.String>, boolean) 	e23139:107;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isVerbalAuxiliary(edu.stanford.nlp.trees.Tree, Set<java.lang.String>, boolean) 	e23405:156;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isVerbalAuxiliary(edu.stanford.nlp.trees.Tree, Set<java.lang.String>, boolean) 	e23379:182;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isVerbalAuxiliary(edu.stanford.nlp.trees.Tree, Set<java.lang.String>, boolean) 	e23321:240;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]) 	e25614:131;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]) 	e25566:260;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]) 	e25566:179;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]) 	e25645:181;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[]) 	e25614:212;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e27851:113;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e27813:217;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e27813:151;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e27878:152;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e27851:179;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], Set<java.lang.String>, boolean) 	e29349:88;
