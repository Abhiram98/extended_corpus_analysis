edu.stanford.nlp.stats.Counters	public static double max(Counter<E>, double) 	e5350:87;
edu.stanford.nlp.stats.Counters	public static double max(Counter<E>, double) 	e5305:114;
edu.stanford.nlp.stats.Counters	public static E argmin(Counter<E>) 	e6824:224;
edu.stanford.nlp.stats.Counters	public static E argmax(Counter<E>, Comparator<E>, E) 	e8155:304;
edu.stanford.nlp.stats.Counters	public static E argmax(Counter<E>, Comparator<E>, E) 	e8198:261;
edu.stanford.nlp.stats.Counters	public static E argmax(Counter<E>, Comparator<E>, E) 	e8155:285;
edu.stanford.nlp.stats.Counters	public static E argmax(Counter<E>, Comparator<E>, E) 	e7938:212;
edu.stanford.nlp.stats.Counters	public static E argmax(Counter<E>, Comparator<E>, E) 	e8219:240;
edu.stanford.nlp.stats.Counters	public static E argmin(Counter<E>, Comparator<E>) 	e8781:221;
edu.stanford.nlp.stats.Counters	public static List<E> deleteOutofRange(Counter<E>, int, int) 	e17810:346;
edu.stanford.nlp.stats.Counters	public static List<E> deleteOutofRange(Counter<E>, int, int) 	e17810:322;
edu.stanford.nlp.stats.Counters	public static List<E> deleteOutofRange(Counter<E>, int, int) 	e17852:304;
edu.stanford.nlp.stats.Counters	public static List<E> deleteOutofRange(Counter<E>, int, int) 	e17852:280;
edu.stanford.nlp.stats.Counters	public static List<E> deleteOutofRange(Counter<E>, int, int) 	e17970:186;
edu.stanford.nlp.stats.Counters	public static void retainTop(Counter<E>, int) 	e18387:118;
edu.stanford.nlp.stats.Counters	public static void retainTopKeyComparable(Counter<E>, int) 	e18771:153;
edu.stanford.nlp.stats.Counters	public static void retainTopKeyComparable(Counter<E>, int) 	e18826:98;
edu.stanford.nlp.stats.Counters	public static List<E> retainBottom(Counter<E>, int) 	e19188:216;
edu.stanford.nlp.stats.Counters	public static List<E> retainBottom(Counter<E>, int) 	e19229:175;
edu.stanford.nlp.stats.Counters	public static List<E> retainBottom(Counter<E>, int) 	e19229:155;
edu.stanford.nlp.stats.Counters	public static List<E> retainBottom(Counter<E>, int) 	e19188:196;
edu.stanford.nlp.stats.Counters	public static List<E> retainBottom(Counter<E>, int) 	e19316:62;
edu.stanford.nlp.stats.Counters	public static Set<E> retainNonZeros(Counter<E>) 	e19750:76;
edu.stanford.nlp.stats.Counters	public static Set<E> retainNonZeros(Counter<E>) 	e19631:114;
edu.stanford.nlp.stats.Counters	public static Set<E> retainNonZeros(Counter<E>) 	e19587:158;
edu.stanford.nlp.stats.Counters	public static Set<E> retainAbove(Counter<E>, double) 	e20450:76;
edu.stanford.nlp.stats.Counters	public static Set<E> retainAbove(Counter<E>, double) 	e20321:124;
edu.stanford.nlp.stats.Counters	public static Set<E> retainAbove(Counter<E>, double) 	e20277:168;
edu.stanford.nlp.stats.Counters	public static Set<Pair<E1,E2>> retainAbove(TwoDimensionalCounter<E1,E2>, double) 	e21360:109;
edu.stanford.nlp.stats.Counters	public static Set<Pair<E1,E2>> retainAbove(TwoDimensionalCounter<E1,E2>, double) 	e21069:286;
edu.stanford.nlp.stats.Counters	public static Set<Pair<E1,E2>> retainAbove(TwoDimensionalCounter<E1,E2>, double) 	e21020:335;
edu.stanford.nlp.stats.Counters	public static Set<Pair<E1,E2>> retainAbove(TwoDimensionalCounter<E1,E2>, double) 	e21137:212;
edu.stanford.nlp.stats.Counters	public static Counter<E> retainBelow(Counter<E>, double) 	e22167:111;
edu.stanford.nlp.stats.Counters	public static Counter<E> retainBelow(Counter<E>, double) 	e21930:232;
edu.stanford.nlp.stats.Counters	public static Counter<E> retainBelow(Counter<E>, double) 	e21979:183;
edu.stanford.nlp.stats.Counters	public static Counter<E> retainBelow(Counter<E>, double) 	e22018:138;
edu.stanford.nlp.stats.Counters	public static Set<java.lang.String> retainMatchingKeys(Counter<java.lang.String>, List<java.util.regex.Pattern>) 	e22710:233;
edu.stanford.nlp.stats.Counters	public static Set<java.lang.String> retainMatchingKeys(Counter<java.lang.String>, List<java.util.regex.Pattern>) 	e22741:146;
edu.stanford.nlp.stats.Counters	public static Set<java.lang.String> retainMatchingKeys(Counter<java.lang.String>, List<java.util.regex.Pattern>) 	e22710:177;
edu.stanford.nlp.stats.Counters	public static Set<java.lang.String> retainMatchingKeys(Counter<java.lang.String>, List<java.util.regex.Pattern>) 	e22741:202;
edu.stanford.nlp.stats.Counters	public static Set<java.lang.String> retainMatchingKeys(Counter<java.lang.String>, List<java.util.regex.Pattern>) 	e22666:283;
edu.stanford.nlp.stats.Counters	public static Set<E> retainKeys(Counter<E>, Collection<E>) 	e23418:98;
edu.stanford.nlp.stats.Counters	public static Set<E> retainKeys(Counter<E>, Collection<E>) 	e23527:76;
edu.stanford.nlp.stats.Counters	public static Set<E> retainKeys(Counter<E>, Collection<E>) 	e23379:143;
edu.stanford.nlp.stats.Counters	public static Set<E> retainKeys(Counter<E>, Collection<E>) 	e23335:187;
edu.stanford.nlp.stats.Counters	public static Counter<E> toTiedRankCounter(Counter<E>) 	e32911:100;
edu.stanford.nlp.stats.Counters	public static Counter<E> toTiedRankCounter(Counter<E>) 	e32911:61;
edu.stanford.nlp.stats.Counters	public static Counter<E> toTiedRankCounter(Counter<E>) 	e32935:76;
edu.stanford.nlp.stats.Counters	public static Counter<E> toTiedRankCounter(Counter<E>) 	e32911:291;
edu.stanford.nlp.stats.Counters	public static Counter<E> toTiedRankCounter(Counter<E>) 	e32651:226;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> toDescendingMagnitudeSortedListWithCounts(Counter<E>) 	e33523:134;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> toDescendingMagnitudeSortedListWithCounts(Counter<E>) 	e33584:88;
edu.stanford.nlp.stats.Counters	public static Counter<E> intersection(Counter<E>, Counter<E>) 	e36266:128;
edu.stanford.nlp.stats.Counters	public static Counter<E> intersection(Counter<E>, Counter<E>) 	e36226:168;
edu.stanford.nlp.stats.Counters	public static Counter<E> intersection(Counter<E>, Counter<E>) 	e36186:134;
edu.stanford.nlp.stats.Counters	public static Counter<E> intersection(Counter<E>, Counter<E>) 	e36186:208;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, Counter<E>) 	e37714:734;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, Counter<E>) 	e37714:714;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, Counter<E>) 	e37748:674;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, Counter<E>) 	e38037:377;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, Counter<E>) 	e38008:414;
edu.stanford.nlp.stats.Counters	public static double dotProduct(Counter<E>, double[], Index<E>) 	e38777:123;
edu.stanford.nlp.stats.Counters	public static double optimizedDotProduct(Counter<E>, Counter<E>) 	e40610:231;
edu.stanford.nlp.stats.Counters	public static double optimizedDotProduct(Counter<E>, Counter<E>) 	e40861:231;
edu.stanford.nlp.stats.Counters	public static double optimizedDotProduct(Counter<E>, Counter<E>) 	e40646:187;
edu.stanford.nlp.stats.Counters	public static double optimizedDotProduct(Counter<E>, Counter<E>) 	e40897:187;
edu.stanford.nlp.stats.Counters	public static double optimizedDotProduct(Counter<E>, Counter<E>) 	e40719:104;
edu.stanford.nlp.stats.Counters	public static Counter<E> absoluteDifference(Counter<E>, Counter<E>) 	e41413:138;
edu.stanford.nlp.stats.Counters	public static double entropy(Counter<E>) 	e42979:189;
edu.stanford.nlp.stats.Counters	public static double entropy(Counter<E>) 	e42941:227;
edu.stanford.nlp.stats.Counters	public static double entropy(Counter<E>) 	e42908:266;
edu.stanford.nlp.stats.Counters	public static double klDivergence(Counter<E>, Counter<E>) 	e44745:522;
edu.stanford.nlp.stats.Counters	public static double jensenShannonDivergence(Counter<E>, Counter<E>) 	e45922:113;
edu.stanford.nlp.stats.Counters	public static double L1Norm(C) 	e47718:100;
edu.stanford.nlp.stats.Counters	public static double saferL2Norm(C) 	e49007:179;
edu.stanford.nlp.stats.Counters	public static double saferL2Norm(C) 	e48872:130;
edu.stanford.nlp.stats.Counters	public static double saferL2Norm(C) 	e48847:155;
edu.stanford.nlp.stats.Counters	public static double saferL2Norm(C) 	e49032:154;
edu.stanford.nlp.stats.Counters	public static double saferL2Norm(C) 	e49032:115;
edu.stanford.nlp.stats.Counters	public static double cosine(Counter<E>, Counter<E>) 	e50137:143;
edu.stanford.nlp.stats.Counters	public static double cosine(Counter<E>, Counter<E>) 	e49989:143;
edu.stanford.nlp.stats.Counters	public static double cosine(Counter<E>, Counter<E>) 	e50023:103;
edu.stanford.nlp.stats.Counters	public static double cosine(Counter<E>, Counter<E>) 	e49989:291;
edu.stanford.nlp.stats.Counters	public static double cosine(Counter<E>, Counter<E>) 	e49819:151;
edu.stanford.nlp.stats.Counters	public static Counter<E> average(Counter<E>, Counter<E>) 	e50941:123;
edu.stanford.nlp.stats.Counters	public static Counter<E> average(Counter<E>, Counter<E>) 	e50908:136;
edu.stanford.nlp.stats.Counters	public static Counter<E> linearCombination(Counter<E>, double, Counter<E>, double) 	e51482:103;
edu.stanford.nlp.stats.Counters	public static Counter<E> linearCombination(Counter<E>, double, Counter<E>, double) 	e51343:134;
edu.stanford.nlp.stats.Counters	public static int hIndex(Counter<E>) 	e52784:343;
edu.stanford.nlp.stats.Counters	public static int hIndex(Counter<E>) 	e52580:199;
edu.stanford.nlp.stats.Counters	public static int hIndex(Counter<E>) 	e52639:272;
edu.stanford.nlp.stats.Counters	public static int hIndex(Counter<E>) 	e52639:226;
edu.stanford.nlp.stats.Counters	public static int hIndex(Counter<E>) 	e52916:211;
edu.stanford.nlp.stats.Counters	public static C perturbCounts(C, java.util.Random, double) 	e53375:363;
edu.stanford.nlp.stats.Counters	public static C perturbCounts(C, java.util.Random, double) 	e53337:357;
edu.stanford.nlp.stats.Counters	public static C perturbCounts(C, java.util.Random, double) 	e53337:401;
edu.stanford.nlp.stats.Counters	public static void printCounterComparison(Counter<E>, Counter<E>, java.io.PrintWriter) 	e54777:349;
edu.stanford.nlp.stats.Counters	public static void printCounterComparison(Counter<E>, Counter<E>, java.io.PrintWriter) 	e54483:271;
edu.stanford.nlp.stats.Counters	public static void printCounterComparison(Counter<E>, Counter<E>, java.io.PrintWriter) 	e54861:265;
edu.stanford.nlp.stats.Counters	public static void printCounterComparison(Counter<E>, Counter<E>, java.io.PrintWriter) 	e54828:298;
edu.stanford.nlp.stats.Counters	public static void printCounterComparison(Counter<E>, Counter<E>, java.io.PrintWriter) 	e54483:372;
edu.stanford.nlp.stats.Counters	public static C tfLogScale(C, double) 	e56433:105;
edu.stanford.nlp.stats.Counters	public static C tfLogScale(C, double) 	e56433:144;
edu.stanford.nlp.stats.Counters	public static C tfLogScale(C, double) 	e56397:141;
edu.stanford.nlp.stats.Counters	public static C tfLogScale(C, double) 	e56397:180;
edu.stanford.nlp.stats.Counters	public static C tfLogScale(C, double) 	e56463:114;
edu.stanford.nlp.stats.Counters	private static void loadIntoCounter(java.lang.String, Class<E>, Counter<E>) throws java.lang.RuntimeException	e58414:219;
edu.stanford.nlp.stats.Counters	private static void loadIntoCounter(java.lang.String, Class<E>, Counter<E>) throws java.lang.RuntimeException	e58467:166;
edu.stanford.nlp.stats.Counters	private static void loadIntoCounter(java.lang.String, Class<E>, Counter<E>) throws java.lang.RuntimeException	e58286:373;
edu.stanford.nlp.stats.Counters	private static void loadIntoCounter(java.lang.String, Class<E>, Counter<E>) throws java.lang.RuntimeException	e58229:412;
edu.stanford.nlp.stats.Counters	private static void loadIntoCounter(java.lang.String, Class<E>, Counter<E>) throws java.lang.RuntimeException	e58353:306;
edu.stanford.nlp.stats.Counters	public static void loadInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounter<T1,T2>) throws java.lang.RuntimeException	e60386:258;
edu.stanford.nlp.stats.Counters	public static void loadInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounter<T1,T2>) throws java.lang.RuntimeException	e60436:208;
edu.stanford.nlp.stats.Counters	public static void loadInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounter<T1,T2>) throws java.lang.RuntimeException	e60072:598;
edu.stanford.nlp.stats.Counters	public static void loadInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounter<T1,T2>) throws java.lang.RuntimeException	e60012:658;
edu.stanford.nlp.stats.Counters	public static void loadInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounter<T1,T2>) throws java.lang.RuntimeException	e60469:175;
edu.stanford.nlp.stats.Counters	public static void loadIncInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounterInterface<T1,T2>) throws java.lang.RuntimeException	e61414:264;
edu.stanford.nlp.stats.Counters	public static void loadIncInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounterInterface<T1,T2>) throws java.lang.RuntimeException	e61464:214;
edu.stanford.nlp.stats.Counters	public static void loadIncInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounterInterface<T1,T2>) throws java.lang.RuntimeException	e61100:604;
edu.stanford.nlp.stats.Counters	public static void loadIncInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounterInterface<T1,T2>) throws java.lang.RuntimeException	e61040:664;
edu.stanford.nlp.stats.Counters	public static void loadIncInto2DCounter(java.lang.String, Class<T1>, Class<T2>, TwoDimensionalCounterInterface<T1,T2>) throws java.lang.RuntimeException	e61497:181;
edu.stanford.nlp.stats.Counters	public static void save2DCounterSorted(TwoDimensionalCounterInterface<T1,T2>, java.lang.String) throws java.io.IOException	e62452:149;
edu.stanford.nlp.stats.Counters	public static void save2DCounterSorted(TwoDimensionalCounterInterface<T1,T2>, java.lang.String) throws java.io.IOException	e62407:194;
edu.stanford.nlp.stats.Counters	public static java.lang.String toSortedString(Counter<T>, int, java.lang.String, java.lang.String, java.lang.String) 	e64641:130;
edu.stanford.nlp.stats.Counters	public static java.lang.String toSortedString(Counter<T>, int, java.lang.String, java.lang.String, java.lang.String) 	e64576:201;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat) 	e67601:176;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat) 	e67601:115;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat) 	e67628:88;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat) 	e67535:294;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat) 	e67535:268;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 	e68350:301;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 	e68551:94;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 	e68495:80;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 	e68350:328;
edu.stanford.nlp.stats.Counters	public static java.lang.String toString(Counter<E>, java.text.NumberFormat, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 	e68159:492;
edu.stanford.nlp.stats.Counters	public static java.lang.String toBiggestValuesFirstString(Counter<E>, int) 	e69343:134;
edu.stanford.nlp.stats.Counters	public static java.lang.String toBiggestValuesFirstString(Counter<E>, int) 	e69290:193;
edu.stanford.nlp.stats.Counters	public static java.lang.String toBiggestValuesFirstString(Counter<java.lang.Integer>, int, Index<T>) 	e69875:147;
edu.stanford.nlp.stats.Counters	public static java.lang.String toBiggestValuesFirstString(Counter<java.lang.Integer>, int, Index<T>) 	e69822:206;
edu.stanford.nlp.stats.Counters	public static java.lang.String toVerticalString(Counter<E>, int, java.lang.String, boolean) 	e71388:259;
edu.stanford.nlp.stats.Counters	public static java.lang.String toVerticalString(Counter<E>, int, java.lang.String, boolean) 	e71388:198;
edu.stanford.nlp.stats.Counters	public static java.lang.String toVerticalString(Counter<E>, int, java.lang.String, boolean) 	e71415:171;
edu.stanford.nlp.stats.Counters	public static java.lang.String toVerticalString(Counter<E>, int, java.lang.String, boolean) 	e71415:232;
edu.stanford.nlp.stats.Counters	public static java.lang.String toVerticalString(Counter<E>, int, java.lang.String, boolean) 	e71288:391;
edu.stanford.nlp.stats.Counters	public static E restrictedArgMax(Counter<E>, Collection<E>) 	e71953:147;
edu.stanford.nlp.stats.Counters	public static Counter<T> toCounter(double[], Index<T>) 	e72386:134;
edu.stanford.nlp.stats.Counters	public static Counter<T> toCounter(double[], Index<T>) 	e72386:120;
edu.stanford.nlp.stats.Counters	public static Counter<T> toCounter(double[], Index<T>) 	e72205:176;
edu.stanford.nlp.stats.Counters	public static Counter<T> toCounter(double[], Index<T>) 	e72343:163;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>, Index<E>, int) 	e73997:97;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>, Index<E>, int) 	e73970:148;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>, Index<E>, int) 	e73970:130;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>, Index<E>, int) 	e73926:192;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>, Index<E>, int) 	e73926:174;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>) 	e74368:95;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>) 	e74368:77;
edu.stanford.nlp.stats.Counters	public static double[] asArray(Counter<E>) 	e74353:92;
edu.stanford.nlp.stats.Counters	public static T sample(Counter<T>, java.util.Random) 	e75734:323;
edu.stanford.nlp.stats.Counters	public static T sample(Counter<T>, java.util.Random) 	e75759:298;
edu.stanford.nlp.stats.Counters	public static T sample(Counter<T>, java.util.Random) 	e75648:81;
edu.stanford.nlp.stats.Counters	public static boolean equals(Counter<E>, Counter<E>, double) 	e78351:152;
edu.stanford.nlp.stats.Counters	public static boolean equals(Counter<E>, Counter<E>, double) 	e78280:223;
edu.stanford.nlp.stats.Counters	public static Counter<T> unmodifiableCounter(Counter<T>) 	e80378:1116;
edu.stanford.nlp.stats.Counters	public static Counter<T> unmodifiableCounter(Counter<T>) 	e80212:1404;
edu.stanford.nlp.stats.Counters	public static Counter<T> unmodifiableCounter(Counter<T>) 	e80668:658;
edu.stanford.nlp.stats.Counters	public static Counter<E> asCounter(FixedPrioritiesPriorityQueue<E>) 	e82588:113;
edu.stanford.nlp.stats.Counters	public static Counter<E> asCounter(FixedPrioritiesPriorityQueue<E>) 	e82559:148;
edu.stanford.nlp.stats.Counters	public static Counter<E> fromMap(Map<E,N>, Class<N>) 	e88173:416;
edu.stanford.nlp.stats.Counters	public static Counter<E> fromMap(Map<E,N>, Class<N>) 	e88069:637;
edu.stanford.nlp.stats.Counters	public static Counter<E> fromMap(Map<E,N>, Class<N>) 	e90811:456;
edu.stanford.nlp.stats.Counters	public static Counter<E> fromMap(Map<E,N>, Class<N>) 	e90690:694;
edu.stanford.nlp.stats.Counters	public static Counter<E> fromMap(Map<E,N>, Class<N>) 	e83644:261;
edu.stanford.nlp.stats.Counters	public static Map<E,java.lang.Double> asMap(Counter<E>) 	e92313:95;
edu.stanford.nlp.stats.Counters	public static void retainTopMass(Counter<E>, double) 	e95835:127;
edu.stanford.nlp.stats.Counters	public static void retainTopMass(Counter<E>, double) 	e95835:106;
edu.stanford.nlp.stats.Counters	public static void retainTopMass(Counter<E>, double) 	e95877:85;
edu.stanford.nlp.stats.Counters	public static void retainTopMass(Counter<E>, double) 	e95777:191;
edu.stanford.nlp.stats.Counters	public static double pearsonsCorrelationCoefficient(Counter<E>, Counter<E>) 	e96536:185;
edu.stanford.nlp.stats.Counters	public static double pearsonsCorrelationCoefficient(Counter<E>, Counter<E>) 	e96581:140;
edu.stanford.nlp.stats.Counters	public static double pearsonsCorrelationCoefficient(Counter<E>, Counter<E>) 	e96536:122;
edu.stanford.nlp.stats.Counters	public static double pearsonsCorrelationCoefficient(Counter<E>, Counter<E>) 	e96491:230;
edu.stanford.nlp.stats.Counters	public static double pearsonsCorrelationCoefficient(Counter<E>, Counter<E>) 	e96454:267;
edu.stanford.nlp.stats.Counters	public static List<E> topKeys(Counter<E>, int) 	e97519:103;
edu.stanford.nlp.stats.Counters	public static List<E> topKeys(Counter<E>, int) 	e97536:103;
edu.stanford.nlp.stats.Counters	public static List<E> topKeys(Counter<E>, int) 	e97536:86;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> topKeysWithCounts(Counter<E>, int) 	e97900:79;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> topKeysWithCounts(Counter<E>, int) 	e97841:144;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> topKeysWithCounts(Counter<E>, int) 	e97858:144;
edu.stanford.nlp.stats.Counters	public static List<Pair<E,java.lang.Double>> topKeysWithCounts(Counter<E>, int) 	e97858:127;
