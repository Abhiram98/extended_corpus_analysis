edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static int getPriorType(java.lang.String) 	e3726:571;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static int getPriorType(java.lang.String) 	e3639:658;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static int getPriorType(java.lang.String) 	e3813:484;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static int getPriorType(java.lang.String) 	e3556:741;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static int getPriorType(java.lang.String) 	e3892:405;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	void <init>(int[][][][], int[][], int, Index<java.lang.String>, List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], java.lang.String, java.lang.String, double, double[][][][], int) 	e5970:315;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	void <init>(int[][][][], int[][], int, Index<java.lang.String>, List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], java.lang.String, java.lang.String, double, double[][][][], int) 	e6074:211;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	void <init>(int[][][][], int[][], int, Index<java.lang.String>, List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], java.lang.String, java.lang.String, double, double[][][][], int) 	e6096:162;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	void <init>(int[][][][], int[][], int, Index<java.lang.String>, List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], java.lang.String, java.lang.String, double, double[][][][], int) 	e6115:143;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	void <init>(int[][][][], int[][], int, Index<java.lang.String>, List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], java.lang.String, java.lang.String, double, double[][][][], int) 	e6096:137;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void empiricalCountsForADoc(double[][], int) 	e7229:188;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void empiricalCountsForADoc(double[][], int) 	e7113:304;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void empiricalCountsForADoc(double[][], int) 	e6976:447;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void empiricalCountsForADoc(double[][], int) 	e7949:288;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void empiricalCountsForADoc(double[][], int) 	e8008:219;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private double expectedCountsAndValueForADoc(double[][], int, boolean, boolean) 	e9912:192;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private double expectedCountsAndValueForADoc(double[][], int, boolean, boolean) 	e9806:298;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private double expectedCountsAndValueForADoc(double[][], int, boolean, boolean) 	e9671:441;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private double expectedCountsAndValueForADoc(double[][], int, boolean, boolean) 	e11481:304;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private double expectedCountsAndValueForADoc(double[][], int, boolean, boolean) 	e11544:227;
	public Pair<java.lang.Integer,java.lang.Double> process(Pair<java.lang.Integer,List<java.lang.Integer>>) 	e12462:121;
	public Pair<java.lang.Integer,java.lang.Double> process(Pair<java.lang.Integer,List<java.lang.Integer>>) 	e12431:152;
	public Pair<java.lang.Integer,java.lang.Double> process(Pair<java.lang.Integer,List<java.lang.Integer>>) 	e12590:129;
	public Pair<java.lang.Integer,java.lang.Double> process(Pair<java.lang.Integer,List<java.lang.Integer>>) 	e12431:288;
	public Pair<java.lang.Integer,java.lang.Double> process(Pair<java.lang.Integer,List<java.lang.Integer>>) 	e12462:257;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected double regularGradientAndValue() 	e13399:108;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected double regularGradientAndValue() 	e13460:93;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected double regularGradientAndValue() 	e14017:133;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected double regularGradientAndValue() 	e13367:561;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected double regularGradientAndValue() 	e13367:541;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculate(double[]) 	e14696:945;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculate(double[]) 	e15053:588;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculate(double[]) 	e14757:884;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculate(double[]) 	e14717:924;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculate(double[]) 	e14696:970;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void calculateStochasticGradientLocal(double[], int[]) 	e16562:180;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void calculateStochasticGradientLocal(double[], int[]) 	e16562:304;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void calculateStochasticGradientLocal(double[], int[]) 	e16728:601;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void calculateStochasticGradientLocal(double[], int[]) 	e16562:767;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	private void calculateStochasticGradientLocal(double[], int[]) 	e16385:337;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double calculateStochasticUpdate(double[], double, int[], double) 	e18586:149;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double calculateStochasticUpdate(double[], double, int[], double) 	e18555:180;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double calculateStochasticUpdate(double[], double, int[], double) 	e18522:255;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double calculateStochasticUpdate(double[], double, int[], double) 	e20346:446;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double calculateStochasticUpdate(double[], double, int[], double) 	e18981:1339;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculateStochasticGradient(double[], int[]) 	e21484:149;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculateStochasticGradient(double[], int[]) 	e21453:180;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculateStochasticGradient(double[], int[]) 	e21420:255;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculateStochasticGradient(double[], int[]) 	e21420:1652;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed void calculateStochasticGradient(double[], int[]) 	e21372:303;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double valueAt(double[], double, int[]) 	e24414:198;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double valueAt(double[], double, int[]) 	e24252:322;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double valueAt(double[], double, int[]) 	e24252:156;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double valueAt(double[], double, int[]) 	e24094:314;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public sealed double valueAt(double[], double, int[]) 	e24346:266;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void applyPrior(double[], double) 	e25108:207;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void applyPrior(double[], double) 	e25922:215;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void applyPrior(double[], double) 	e25149:166;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void applyPrior(double[], double) 	e25963:174;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void applyPrior(double[], double) 	e25194:113;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected Pair<double[][][],double[][][]> getCondProbs(CRFCliqueTree#RAW, int[][][]) 	e28335:515;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected Pair<double[][][],double[][][]> getCondProbs(CRFCliqueTree#RAW, int[][][]) 	e28335:385;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected Pair<double[][][],double[][][]> getCondProbs(CRFCliqueTree#RAW, int[][][]) 	e26767:2789;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected Pair<double[][][],double[][][]> getCondProbs(CRFCliqueTree#RAW, int[][][]) 	e27597:1953;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected Pair<double[][][],double[][][]> getCondProbs(CRFCliqueTree#RAW, int[][][]) 	e27376:195;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void combine2DArr(double[][], Map<java.lang.Integer,double[]>) 	e30138:141;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void combine2DArr(double[][], Map<java.lang.Integer,double[]>) 	e30166:113;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void combine2DArr(double[][], Map<java.lang.Integer,double[]>, double) 	e30521:149;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	protected void combine2DArr(double[][], Map<java.lang.Integer,double[]>, double) 	e30549:121;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[][] to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[]) 	e31594:149;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[][] to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[]) 	e31478:299;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[][] to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[]) 	e31478:273;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[][] to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[]) 	e31433:344;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[][] to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[]) 	e31433:318;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static void to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], double[][]) 	e32272:149;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static void to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], double[][]) 	e32156:299;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static void to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], double[][]) 	e32156:273;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static void to2D(double[], List<Index<edu.stanford.nlp.ie.crf.CRFLabel>>, int[], double[][]) 	e32101:328;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public static double[] to1D(double[][], int) 	e33761:162;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public int[][] getWeightIndices() 	e34308:127;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public int[][] getWeightIndices() 	e34239:196;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public int[][] getWeightIndices() 	e34192:251;
edu.stanford.nlp.ie.crf.CRFLogConditionalObjectiveFunction	public int[][] getWeightIndices() 	e34171:272;
