edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e4592:134;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e4282:101;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e4176:207;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e4176:100;
edu.stanford.nlp.trees.SemanticHeadFinder	public void <init>(edu.stanford.nlp.trees.TreebankLanguagePack, boolean) 	e3975:408;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e8044:175;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e7766:453;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e7766:337;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e7620:599;
edu.stanford.nlp.trees.SemanticHeadFinder	private void ruleChanges() 	e7620:483;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e8578:420;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e8934:64;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e8788:210;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e8788:137;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed int postOperationFix(int, edu.stanford.nlp.trees.Tree[]) 	e8616:382;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e10538:93;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e11890:373;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e11187:284;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e11770:503;
edu.stanford.nlp.trees.SemanticHeadFinder	protected sealed edu.stanford.nlp.trees.Tree determineNonTrivialHead(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e11529:744;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e14078:1124;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e14048:1154;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e14484:125;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15053:125;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean isExistential(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e14248:413;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15963:119;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15963:97;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15648:309;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15618:339;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean isWHQ(edu.stanford.nlp.trees.Tree, edu.stanford.nlp.trees.Tree) 	e15752:191;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e16901:92;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e16873:120;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e16901:166;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e16873:194;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasPassiveProgressiveAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e16821:246;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e20588:86;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e20561:113;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e20523:217;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e20523:151;
edu.stanford.nlp.trees.SemanticHeadFinder	private static boolean vpContainsParticiple(edu.stanford.nlp.trees.Tree) 	e20588:152;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e22504:92;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e22476:120;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e22263:86;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e22236:113;
edu.stanford.nlp.trees.SemanticHeadFinder	private boolean hasVerbalAuxiliary(edu.stanford.nlp.trees.Tree[], HashSet<java.lang.String>) 	e22504:166;
